#version 430

#define LOCAL_SIZE_X 0

layout(local_size_x=LOCAL_SIZE_X, local_size_y=1, local_size_z=1) in;


struct Index {
    uint boid_index;
    uint cell_index;
};

layout(std430, binding=0) readonly buffer buffer_indices {
    Index indices[];
};

layout(std430, binding=1) writeonly buffer buffer_cell_start {
    uint cell_start[];
};

uniform uint boid_count;

void main() {
    const uint index = gl_GlobalInvocationID.x;

    if (index >= boid_count)
        return;

    if (index == 0) {
        cell_start[indices[index].cell_index] = index;
        return;
    }

    if (indices[index - 1].cell_index != indices[index].cell_index) {
        cell_start[indices[index].cell_index] = index;
        return;
    }
}

//NOTE: Do not use memoryBarrier() with a number of dispatch that exceed some hardware limit (being around 49 000 for the RTX 2080 super)
