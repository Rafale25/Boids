#version 430

#define LOCAL_SIZE_X 0

layout(local_size_x=LOCAL_SIZE_X, local_size_y=1, local_size_z=1) in;

#include shaders/boids/boid_struct.glsl

struct Index {
    uint boid_index;
    uint cell_index;
};


layout(std430, binding=0) buffer buffer_boids {
    Boid boids[];
};

layout(std430, binding=1) buffer buffer_indices {
    Index indices[];
};

uniform float cell_spacing;
uniform uint total_grid_cell_count;
uniform uint map_size;
uniform uint boid_count;

#include shaders/boids/cell_xyz.glsl
#include shaders/boids/hash.glsl

void main() {
    const uint index = gl_GlobalInvocationID.x;

    if (index >= boid_count)
        return;

    const Boid boid = boids[index];
    ivec3 cell_index = cell_xyz(boid.pos);
    uint cell_id = hash(cell_index);


    boids[index].cell_id = cell_id;

    indices[index].boid_index = index;
    indices[index].cell_index = cell_id;
}
